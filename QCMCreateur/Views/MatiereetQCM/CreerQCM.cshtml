@model QCMCreateur.Models.QCM

@{
    ViewBag.Title = "CreerQCM";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.ListeMatiere, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ListeMatiere, new SelectList(ViewBag.matiere, "Value", "Text"), "Selectionner Matiere", new { @class = "form-control", id = "maliste" })
                @Html.HiddenFor(model => model.MatiereSelectionner, new { @class = "form-control", id = "monhidden" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Question, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReponseUne, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReponseUne, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReponseUne, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReponseDeux, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReponseDeux, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReponseDeux, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReponseTrois, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReponseTrois, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReponseTrois, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BonneReponse, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BonneReponse, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BonneReponse, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Valider" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour", "Index", "Home")
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $("#maliste").change(function (evt) {
                $("#monhidden").val($("#maliste option:selected").text());
            });
        });

    </script>
    @Scripts.Render("~/bundles/jqueryval")

}
